{"version":3,"sources":["logo.svg","components/header.js","views/components-view.js","views/product-view.js","views/not-found-view.js","views/page-view.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","className","Link","to","src","logo","alt","href","target","rel","dist","React","ComponentsView","header_Header","id","productId","style","width","margin","border","collectionId","ProductViewComponent","props","match","params","similarProductsFetch","renderer","viewMode","ProductView","connect","concat","NotFoundView","PageView","pageId","hashHistory","createHashHistory","basename","process","tipserConfig","lang","primaryColor","useDefaultErrorHandler","eventsHandlers","onError","error","console","log","onAddToCart","_ref","cartSize","product","App","react_default","a","createElement","Router","history","posId","config","Switch","Route","path","component","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe6f0f70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.03714909.svg\";","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Cart } from '@tipser/tipser-elements';\nimport logo from '../logo.svg';\nimport './header.css';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header\">\n                <nav className=\"navigation\">\n                    <Link className=\"te-logo\" to=\"/\">\n                        <img src={logo} alt=\"logo\" />\n                    </Link>\n                    <ul className=\"horizontal-menu\">\n                        <li className=\"horizontal-item\">\n                            <Link to=\"/product/5a1ad987b301420bbce8e976\">Example product #1</Link>\n                        </li>\n                        <li className=\"horizontal-item\">\n                            <Link to=\"/product/5a2876ea8aa0cd7044f34e3c\">Example product #2</Link>\n                        </li>\n                        <li className=\"horizontal-item\">\n                            <a className=\"link\" href=\"https://developers.tipser.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                Tipser Developers\n                            </a>\n                        </li>\n                        <li className=\"horizontal-item\">\n                            <a\n                                className=\"link\"\n                                href=\"https://tipser.github.io/docs/#tipser-elements\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                Tipser Elements documentation\n                            </a>\n                        </li>\n                        <li className=\"horizontal-item\">\n                            <a\n                                className=\"link\"\n                                href=\"https://github.com/Tipser/tipser-elements-react-bootstrap\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                GitHub repo of this page\n                            </a>\n                        </li>\n                        <li className=\"horizontal-item\">\n                            <Link to=\"/page/5rFWEeeSaoTMASvLiZHnJ2\">Dynamic inventory gallery</Link>\n                        </li>\n                    </ul>\n                    {/* Inserting the Tipser cart Icon */}\n                    <Cart />\n                </nav>\n            </header>\n        );\n    }\n}\n","import * as React from 'react';\nimport { TipserElement, Product, Cart, Collection, Store } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\n\nexport class ComponentsView extends React.Component {\n    render() {\n        const styleMedium = {\n            width: '980px',\n            margin: '0 auto',\n            border: '1px solid pink',\n        };\n\n        const styleSmall = {\n            width: '767px',\n            margin: '0 auto',\n            border: '1px solid pink',\n        };\n\n        const styleXS = {\n            width: '400px',\n            margin: '0 auto',\n            border: '1px solid pink',\n        };\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    {/* Inserting an elment from Contentful taking the content Id as the prop. This example renders a page, consisting of other components */}\n                    <TipserElement id=\"2OeW1Ab8lKNcUq6dVUh79\" />\n\n                    {/* Inserting a product using the productId as prop  */}\n                    <Product productId=\"5ba2334a781baa0001ccdffc\" />\n\n                    <div style={styleMedium}>\n                        <h3>Container width 980px</h3>\n                        <Product productId=\"5aafd24f9d25801d54d41132\" />\n                    </div>\n                    <div style={styleSmall}>\n                        <h3>Container width 767px</h3>\n                        <Product productId=\"5aafd24f9d25801d54d41132\" />\n                    </div>\n                    <div style={styleXS}>\n                        <h3>Container width 400px</h3>\n                        <Product productId=\"5aafd24f9d25801d54d41132\" />\n                    </div>\n\n                    {/* Inserting an elment from Contentful taking the content Id as the prop. This example renders a page, consisting of other components */}\n                    <TipserElement id=\"1larHZb8TeMQiqmi4W8CIS\" />\n\n                    <Collection collectionId=\"5beaaa0653e83f0001e18577\" />\n\n                    <Collection collectionId=\"5bec3f0e8d1736000154335a\" />\n\n                    <Collection collectionId=\"594a228e8aa0ce56d8aaad06\" />\n\n                    <Store />\n                </main>\n                {/* Inserting a custom footer */}\n                <footer>\n                    <span className=\"footer-text\">This is the footer</span>\n                </footer>\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport { connect } from 'react-refetch';\n\nimport { Product, Collection } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\n\nclass ProductViewComponent extends React.Component {\n    render() {\n        const { productId } = this.props.match.params;\n        const { similarProductsFetch } = this.props;\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    <div className=\"container\">\n                        <h4>Product</h4>\n                        <Product productId={productId} />\n                        <h4>Product card</h4>\n                        <Product productId={productId} renderer=\"card\" />\n                        <h4>Product card compact</h4>\n                        <Product productId={productId} viewMode=\"compact\" />\n                    </div>\n                </main>\n            </React.Fragment>\n        );\n    }\n}\n\nexport const ProductView = connect(props => ({\n    similarProductsFetch: `https://t3-prod-api.tipser.com/v3/products/${props.match.params.productId}/similar?onlyAvailable=true`,\n}))(ProductViewComponent);\n","import * as React from 'react';\n\nexport class NotFoundView extends React.Component {\n    render() {\n        return <React.Fragment>The page is not found</React.Fragment>;\n    }\n}\n","import * as React from 'react';\n\nimport { Page } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\n\nexport class PageView extends React.Component {\n    render() {\n        const { pageId } = this.props.match.params;\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    <div className=\"container\">\n                        <Page id={pageId} />\n                    </div>\n                </main>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { TipserElementsProvider } from '@tipser/tipser-elements';\nimport { ComponentsView } from './views/components-view';\nimport { ProductView } from './views/product-view';\nimport { NotFoundView } from './views/not-found-view';\nimport './App.css';\nimport { createHashHistory } from 'history';\nimport { PageView } from './views/page-view';\n\nimport '@tipser/tipser-elements/dist/index.css';\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nlet tipserConfig = {\n    lang: 'en',\n    primaryColor: 'red',\n    useDefaultErrorHandler: true,\n    eventsHandlers: {\n        onError: error => {\n            console.log(error);\n        },\n        onAddToCart: ({ cartSize, product }) => {\n            console.log('Hurray, you have added item to cart. ', product);\n            console.log('Your cart size is now. ', cartSize);\n        },\n    },\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Router history={hashHistory}>\n                <TipserElementsProvider posId={'59f1ef63b8f3f6727cef1d34'} config={tipserConfig}>\n                    <Switch>\n                        <Route path=\"/product/:productId\" component={ProductView} />\n                        <Route path=\"/page/:pageId\" component={PageView} />\n                        <Route path=\"/\" component={ComponentsView} />\n                        <Route component={NotFoundView} />\n                    </Switch>\n                </TipserElementsProvider>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}