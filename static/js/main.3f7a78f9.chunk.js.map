{"version":3,"sources":["logo.svg","components/header.js","components/Footer/footer.js","views/components-view.js","views/product-view.js","views/not-found-view.js","views/page-view.js","views/responsive-product.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Link","to","src","logo","alt","React","Footer","href","target","rel","ComponentsView","productId","viewMode","collectionId","carousel","ProductView","this","props","match","params","renderer","NotFoundView","PageView","pageId","id","ResponsiveProduct","style","width","margin","border","hashHistory","createHashHistory","basename","process","tipserConfig","lang","TipserLang","enUS","env","TipserEnv","dev","primaryColor","openOldDialog","openOldCheckout","eventsHandlers","onError","error","console","log","onAddToCart","cartSize","product","App","posId","config","sentryEnv","BrowserRouter","history","Switch","Route","path","component","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f7a78f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.03714909.svg\";","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Cart } from '@tipser/tipser-elements';\nimport logo from '../logo.svg';\nimport './header.css';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header\">\n                <nav className=\"navigation\">\n                    <Link className=\"te-logo\" to=\"/\">\n                        <img src={logo} alt=\"logo\" />\n                    </Link>\n                    {/*<ul className=\"horizontal-menu\">*/}\n                    {/*    <li className=\"horizontal-item\">*/}\n                    {/*        <Link to=\"/product/589c82198aa0ce70743b0442\">Example product</Link>*/}\n                    {/*    </li>*/}\n                    {/*    <li className=\"horizontal-item\">*/}\n                    {/*        <Link to=\"/responsiveness\">Responsiveness</Link>*/}\n                    {/*    </li>*/}\n\n                    {/*    <li className=\"horizontal-item\">*/}\n                    {/*        <a*/}\n                    {/*            className=\"link\"*/}\n                    {/*            href=\"https://tipser.github.io/docs/#tipser-elements\"*/}\n                    {/*            target=\"_blank\"*/}\n                    {/*            rel=\"noopener noreferrer\"*/}\n                    {/*        >*/}\n                    {/*            Documentation*/}\n                    {/*        </a>*/}\n                    {/*    </li>*/}\n                    {/*    <li className=\"horizontal-item\">*/}\n                    {/*        <a*/}\n                    {/*            className=\"link\"*/}\n                    {/*            href=\"https://github.com/Tipser/tipser-elements-react-bootstrap\"*/}\n                    {/*            target=\"_blank\"*/}\n                    {/*            rel=\"noopener noreferrer\"*/}\n                    {/*        >*/}\n                    {/*            GitHub repo*/}\n                    {/*        </a>*/}\n                    {/*    </li>*/}\n                    {/*</ul>*/}\n                    <Cart />\n                </nav>\n            </header>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../logo.svg';\nimport './footer.css';\n\nexport class Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                {/*<div className=\"footer-terms\">*/}\n                <div className=\"footer-logo\">\n                    <Link className=\"tipser-logo\" to=\"/\">\n                        <img src={logo} alt=\"tipser logo\" />\n                    </Link>\n                </div>\n                <div className=\"footer-links \">\n                    <a href=\"https://www.tipser.com/terms\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-link\">\n                        Conditions of Use and Sale\n                    </a>\n                    <a href=\"https://www.tipser.com/terms-privacy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-link\">\n                        Privacy notice\n                    </a>\n                    <a href=\"https://www.tipser.com/imprint\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-link\">\n                        Imprint\n                    </a>\n                    <a href=\"https://www.tipser.com/terms-cookies\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-link\">\n                        Cookies &amp; Analytics\n                    </a>\n                </div>\n                <div className=\"footer-copyrights\">Â© 2011 - 2019, Tipser AB</div>\n                {/*</div>*/}\n            </footer>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Product, Collection, Store } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\nimport { Footer } from '../components/Footer/footer';\n\nexport class ComponentsView extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    {/* Inserting a product using the productId as prop */}\n                    <h2 className=\"heading\">Product</h2>\n                    <Product productId=\"5f4ce0fbbe2d8e6268e55606\" viewMode={\"compact\"} />\n\n                    {/* Inserting a collection using the collectiontId as prop */}\n                    <h2 className=\"heading\">Collection</h2>\n                    <Collection collectionId=\"5b1a709d9d25800ff0e9a314\" />\n\n                    {/* Inserting a collection with a carousel */}\n                    <h2 className=\"heading\">Collection with carousel</h2>\n                    <Collection collectionId=\"5b9665929d25800a1c9b6b34\" carousel />\n                    {/* Inserting Store element */}\n                    <h2 className=\"heading\">Store</h2>\n                    <Store />\n                </main>\n                {/* Inserting a custom footer */}\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Product } from '@tipser/tipser-elements';\n\nimport { Header } from '../components/header';\nimport { Footer } from '../components/Footer/footer';\n\nexport class ProductView extends React.Component {\n    render() {\n        const { productId } = this.props.match.params;\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    <div className=\"container\">\n                        <h3>Product</h3>\n                        <Product productId={productId} />\n                        <h3>Product card</h3>\n                        <Product productId={productId} renderer=\"card\" />\n                        <h3>Product Compact</h3>\n                        <Product productId={productId} viewMode=\"compact\" />\n                    </div>\n                </main>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\n\nexport class NotFoundView extends React.Component {\n    render() {\n        return <React.Fragment>The page is not found</React.Fragment>;\n    }\n}\n","import * as React from 'react';\n\nimport { Page } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\n\nexport class PageView extends React.Component {\n    render() {\n        const { pageId } = this.props.match.params;\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    <div className=\"container\">\n                        <Page id={pageId} />\n                    </div>\n                </main>\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Product } from '@tipser/tipser-elements';\n\nimport { Header } from '../components/header';\nimport { Footer } from '../components/Footer/footer';\n\nexport class ResponsiveProduct extends React.Component {\n    render() {\n        const styleMedium = {\n            width: '980px',\n            margin: '0 auto',\n            border: '1px dashed #eae6df',\n        };\n\n        const styleSmall = {\n            width: '767px',\n            margin: '0 auto',\n            border: '1px dashed #eae6df',\n        };\n\n        const styleXS = {\n            width: '400px',\n            margin: '0 auto',\n            border: '1px dashed #eae6df',\n        };\n\n        return (\n            <React.Fragment>\n                <Header />\n                <main>\n                    <div className=\"container\">\n                        <h2>Full width product view</h2>\n                        <Product productId=\"5b208a40e32bc30ccc161884\" />\n\n                        <div style={styleMedium}>\n                            <h3>Container width 980px</h3>\n                            <Product productId=\"5c6eb635313a2c00010f51bc\" />\n                        </div>\n                        <div style={styleSmall}>\n                            <h3>Container width 767px</h3>\n                            <Product productId=\"5a7a6bd4c0bdfb4ee8521881\" />\n                        </div>\n                        <div style={styleXS}>\n                            <h3>Container width 400px</h3>\n                            <Product productId=\"5ca7126d5559a000010050dc\" />\n                        </div>\n                    </div>\n                </main>\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Switch } from 'react-router';\nimport { createHashHistory } from 'history';\nimport { TipserElementsProvider, TipserLang, TipserEnv } from '@tipser/tipser-elements';\n\nimport { ComponentsView } from './views/components-view';\nimport { ProductView } from './views/product-view';\nimport { NotFoundView } from './views/not-found-view';\nimport { PageView } from './views/page-view';\nimport { ResponsiveProduct } from './views/responsive-product';\n\nimport '@tipser/tipser-elements/dist/index.css';\nimport './App.css';\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nlet tipserConfig = {\n    lang: TipserLang.enUS,\n    env: TipserEnv.dev,\n    primaryColor: '#000000',\n    openOldDialog: false,\n    openOldCheckout: false,\n    eventsHandlers: {\n        onError: error => {\n            console.log(error);\n        },\n        onAddToCart: ({ cartSize, product }) => {\n            console.log('Hurray, you have added item to cart. ', product);\n            console.log('Your cart size is now. ', cartSize);\n        },\n    },\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <TipserElementsProvider posId={'59e86b79b8f3f60a94ecd26a'} config={tipserConfig} sentryEnv=\"frontend_dev\">\n                <BrowserRouter history={hashHistory}>\n                    <Switch>\n                        <Route path=\"/responsiveness\" component={ResponsiveProduct} />\n                        <Route path=\"/product/:productId\" component={ProductView} />\n                        <Route path=\"/page/:pageId\" component={PageView} />\n                        <Route path=\"/\" component={ComponentsView} />\n                        <Route component={NotFoundView} />\n                    </Switch>\n                </BrowserRouter>\n            </TipserElementsProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}