{"version":3,"sources":["logo.svg","components/header.js","views/components-view.js","views/product-view.js","views/not-found-view.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","className","Link","to","src","logo","alt","href","target","rel","dist","React","ComponentsView","header_Header","id","productId","collectionId","ProductViewComponent","props","match","params","similarProductsFetch","fulfilled","products","ProductView","connect","concat","NotFoundView","hashHistory","createHashHistory","basename","process","tipserConfig","lang","primaryColor","useDefaultErrorHandler","eventsHandlers","onError","error","console","log","onAddToCart","_ref","cartSize","product","App","react_default","a","createElement","Router","history","posId","config","Switch","Route","path","component","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d3e67eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.03714909.svg\";","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CartIcon } from '@tipser/tipser-elements';\nimport logo from '../logo.svg';\nimport './header.css';\n\nexport class Header extends React.Component {\n\n    render() {\n        return <header className=\"header\">\n            <nav className=\"navigation\">\n                <Link className=\"te-logo\" to=\"/\"><img src={logo} alt=\"logo\" /></Link>\n                <ul className=\"horizontal-menu\">\n                    <li className=\"horizontal-item\">\n                        <Link to=\"/product/5a1ad987b301420bbce8e976\">Example product #1</Link>\n                    </li>\n                    <li className=\"horizontal-item\">\n                        <Link to=\"/product/5c6d719d3b777f0001dffd36\">Example product #2</Link>\n                    </li>\n                    <li className=\"horizontal-item\">\n                        <a\n                            className=\"link\"\n                            href=\"https://developers.tipser.com\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Tipser Developers\n                        </a>\n                    </li>\n                    <li className=\"horizontal-item\">\n                        <a\n                            className=\"link\"\n                            href=\"https://tipser.github.io/docs/#tipser-elements\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Tipser Elements documentation\n                        </a>\n                    </li>\n                    <li className=\"horizontal-item\">\n                        <a\n                            className=\"link\"\n                            href=\"https://github.com/Tipser/tipser-elements-react-bootstrap\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            GitHub repo of this page\n                        </a>\n                    </li>\n                </ul>\n                {/* Inserting the Tipser cart Icon */}\n                <CartIcon />\n            </nav>\n        </header>\n    }\n}","import * as React from 'react';\nimport { TipserElement, TipserProduct, CartIcon, CollectionComponent, ShopComponent } from '@tipser/tipser-elements';\nimport {Header } from '../components/header';\n\nexport class ComponentsView extends React.Component {\n\n    render() {\n        return <React.Fragment>\n            <Header></Header>\n            <main>\n                {/* Inserting an elment from Contentful taking the content Id as the prop. This example renders a page, consisting of other components */}\n                <TipserElement id=\"2OeW1Ab8lKNcUq6dVUh79\" />\n\n                {/* Inserting a product using the productId as prop  */}\n                <TipserProduct productId=\"5ba2334a781baa0001ccdffc\" />\n\n                {/* Inserting an elment from Contentful taking the content Id as the prop. This example renders a page, consisting of other components */}\n                <TipserElement id=\"1larHZb8TeMQiqmi4W8CIS\" />\n\n                <CollectionComponent collectionId=\"5beaaa0653e83f0001e18577\" />\n\n                <CollectionComponent collectionId=\"5bec3f0e8d1736000154335a\" />\n\n                <CollectionComponent collectionId=\"594a228e8aa0ce56d8aaad06\" />\n\n                 <ShopComponent />\n            </main>\n            {/* Inserting a custom footer */}\n            <footer>\n                <span className=\"footer-text\">This is the footer</span>\n            </footer>\n        </React.Fragment>\n    }\n}\n","import * as React from 'react';\nimport { connect } from 'react-refetch';\n\nimport { TipserProduct, CollectionComponent } from '@tipser/tipser-elements';\nimport { Header } from '../components/header';\n\nclass ProductViewComponent extends React.Component {\n\n    render() {\n        const { productId } = this.props.match.params;\n        const { similarProductsFetch } = this.props;\n\n        return <React.Fragment>\n            <Header></Header>\n            <main>\n                <TipserProduct productId={productId} />\n            </main>\n            <h2>Similar products</h2>\n            {similarProductsFetch.fulfilled && <div>\n                <CollectionComponent products={similarProductsFetch.value}/>\n            </div>}\n        </React.Fragment>\n    }\n}\n\nexport const ProductView = connect(props => ({\n    similarProductsFetch: `https://t3-prod-api.tipser.com/v3/products/${props.match.params.productId}/similar?onlyAvailable=true`\n  }))(ProductViewComponent)","import * as React from 'react';\n\nexport class NotFoundView extends React.Component {\n\n    render() {\n        return <React.Fragment>\n            The page is not found\n        </React.Fragment>\n    }\n}","import React, { Component } from 'react';\nimport { Route, Switch, Router } from 'react-router-dom'\nimport { TipserElementsProvider } from '@tipser/tipser-elements';\nimport { ComponentsView } from './views/components-view';\nimport { ProductView } from './views/product-view';\nimport { NotFoundView } from './views/not-found-view';\nimport './App.css';\nimport { createHashHistory } from 'history';\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nlet tipserConfig = {\n    lang: 'en',\n    primaryColor: 'red',\n    useDefaultErrorHandler: true,\n    eventsHandlers: {\n        onError: (error) => {\n            console.log(error)\n        },\n        onAddToCart: ({cartSize, product}) => {\n            console.log('Hurray, you have added item to cart. ', product);\n            console.log('Your cart size is now. ', cartSize);\n        }\n    }\n};\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router history={hashHistory}>\n                <TipserElementsProvider\n                    posId={\"5075d7715c3d090a90585e87\"}\n                    config={tipserConfig}>\n                    <Switch>\n                        <Route path=\"/product/:productId\" component={ProductView} />\n                        <Route path=\"/\" component={ComponentsView} />\n                        <Route component={NotFoundView} />\n                    </Switch>\n                </TipserElementsProvider>\n            </Router>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}